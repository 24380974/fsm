{{- if eq .Values.fsm.trafficInterceptionMode "NodeLevel" }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fsm-xnetwork
  namespace: {{ include "fsm.namespace" . }}
  labels:
    {{- include "fsm.labels" . | nindent 4 }}
    app: fsm-xnetwork
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: fsm-xnetwork
  template:
    metadata:
      labels:
        app: fsm-xnetwork
    spec:
      {{- if .Values.fsm.fsmXnetwork.affinity }}
      affinity:
      {{- toYaml .Values.fsm.fsmXnetwork.affinity | nindent 8 }}
      {{- end }}
      hostNetwork: true
      containers:
      - name: fsm-xmgt
        image: "{{ include "fsmXnetmgmt.image" . }}"
        imagePullPolicy: {{ .Values.fsm.image.pullPolicy }}
        command: ['/fsm-xnet-mgmt']
        args: [
          "--verbosity", "{{.Values.fsm.controllerLogLevel}}",
          "--mesh-name", "{{.Values.fsm.meshName}}",
          "--fsm-version", "{{ .Chart.AppVersion }}",
          "--fsm-namespace", "{{ include "fsm.namespace" . }}",
          "--trust-domain", "{{.Values.fsm.trustDomain}}",
        ]
        resources:
          limits:
            cpu: "{{.Values.fsm.fsmXnetwork.resource.limits.cpu}}"
            memory: "{{.Values.fsm.fsmXnetwork.resource.limits.memory}}"
          requests:
            cpu: "{{.Values.fsm.fsmXnetwork.resource.requests.cpu}}"
            memory: "{{.Values.fsm.fsmXnetwork.resource.requests.memory}}"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /host/sys/fs
          name: host-sys-fs
          mountPropagation: Bidirectional
      - name: fsm-xnet
        image: "localhost:5000/flomesh/xnet:latest"
        imagePullPolicy: {{ .Values.fsm.image.pullPolicy }}
        command: ['/fsm-xnet-engine']
        args: [
          "--verbosity", "{{.Values.fsm.controllerLogLevel}}",
          "--mesh-name", "{{.Values.fsm.meshName}}",
          "--fsm-version", "{{ .Chart.AppVersion }}",
          "--fsm-namespace", "{{ include "fsm.namespace" . }}",
        ]
        resources:
          limits:
            cpu: "{{.Values.fsm.fsmXnetwork.resource.limits.cpu}}"
            memory: "{{.Values.fsm.fsmXnetwork.resource.limits.memory}}"
          requests:
            cpu: "{{.Values.fsm.fsmXnetwork.resource.requests.cpu}}"
            memory: "{{.Values.fsm.fsmXnetwork.resource.requests.memory}}"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /host/cni/bin
          name: host-cni-bin
        - mountPath: /host/cni/net.d
          name: host-cni-netd
        - mountPath: /host/kube/.token
          name: host-kube-token
        - mountPath: /host/run
          name: host-run
          mountPropagation: Bidirectional
        - mountPath: /host/sys/fs
          name: host-sys-fs
          mountPropagation: Bidirectional
      dnsPolicy: ClusterFirst
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccountName: {{ .Release.Name }}
      volumes:
      - hostPath:
          #path: /opt/cni/bin
          path: /bin
        name: host-cni-bin
      - hostPath:
          #path: /etc/cni/net.d
          path: /var/lib/rancher/k3s/agent/etc/cni/net.d
        name: host-cni-netd
      - hostPath:
          path: /var/run
        name: host-run
      - hostPath:
          path: /opt
        name: host-sys-fs
      - hostPath:
          path: /var/lib/rancher/k3s/server/token
        name: host-kube-token
    {{- if .Values.fsm.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.fsm.imagePullSecrets | indent 8 }}
    {{- end }}
      {{- if .Values.fsm.fsmXnetwork.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.fsm.fsmXnetwork.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.fsm.fsmXnetwork.tolerations }}
      tolerations:
      {{- toYaml .Values.fsm.fsmXnetwork.tolerations | nindent 8 }}
      {{- end }}
{{- end }}